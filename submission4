//break
for (let i = 0; i < 10; i++) {
if (i === 4) break;
process.stdout.write(i +' ');
}

//break2
var readline = require('readline-sync');
const data = [30, 60, 10, 50, 40, 20, 70];
var a = parseInt(readline.question(' Masukan nilai yang dicari: '));
var indeks = -1;
for (let i in data) {
if (data[i] === a) {
    indeks = i;
break;
}
}
if (indeks > -1) {
console.log (`${a} ditemukan pada indeks ke-${indeks}`);
} else {
console.log(`${a} tidak ditemukan`);
}

//continue
for (let i=0; i<10; i++) {
    if (i % 2 === 0) continue;
    process.stdout.write(i + ' ');
    }

//return
function kali(a, b) {
    c = a * b;
    return c;
    }
    var nilai1 = 10, nilai2 = 20, hasil;
    hasil = kali(nilai1, nilai2);
    console.log(` ${nilai1} x ${nilai2} = ${hasil} `);

//memanggil fungsi
var readline = require('readline-sync');
function kali(a, b) {
return a * b;
}
var a = parseFloat(readline.question(' Masukan nilai a: '))
var b = parseFloat(readline.question(' Masukan nilai b: '))
var c;
c = kali(a, b);
console.log(` ${a} x ${b} = ${c} `);

//parameter fungsi
function kali(a, b) {
    return a * b;
    }
    var x = 10, y = 20
    var hasil = kali(x, y)
    console.log(hasil)

//membuat tipe objek
function Segitiga(a, t) {
    this.alas = a;
    this.tinggi = t;
    }
    Segitiga.prototype.luas = function () {
    return this.alas * this.tinggi / 2;
    }
    var obj = new Segitiga(4, 5);
console.log(' Sebelum nilai properti diubah ');
console.log(` obj.alas\t: ${obj.alas} `);
console.log(` obj.tinggi\t: ${obj.tinggi} `);
console.log(' obj.luas\t: ' + obj.luas() );
obj.alas = 10;
obj.tinggi = 8;
console.log(' \n Setelah nilai properti diubah ');
console.log(` obj.alas\t: ${obj.alas} `);
console.log(` obj.tinggi\t: ${obj.tinggi} `);
console.log(' obj.luas\t: ' + obj.luas() );

//alternatif membuat tipe objek
var obj = {
    alas: 4,
    tinggi: 5,
    luas: function(){
        return this.alas * this.tinggi / 2;
        }
        }
console.log(' Sebelum nilai properti diubah ');
console.log(` obj.alas\t: ${obj.alas} `);
console.log(` obj.tinggi\t: ${obj.tinggi} `);
console.log(' obj.luas\t: ' + obj.luas() );
obj.alas = 10;
obj.tinggi = 8;
console.log(' \n Setelah nilai properti diubah ');
console.log(` obj.alas\t: ${obj.alas} `);
console.log(` obj.tinggi\t: ${obj.tinggi} `);
console.log(' obj.luas\t: ' + obj.luas() );

//membuat objek
var readline = require('readline-sync');
class Segitiga {
constructor(a, t) {

this.alas = a;
this.tinggi = t;
}
luas() {
return this.alas * this.tinggi / 2;
}
}

var a = parseFloat(readline.question(' Masukan alas: '));
var t = parseFloat(readline.question(' Masukan tinggi: '));

var obj = new Segitiga(a, t);
console.log(' \nSetelah nilai properti diubah ');
console.log(` obj.alas\t: ${obj.alas} `);
console.log(` obj.tinggi\t: ${obj.tinggi} `);
console.log(' obj.luas\t: ' + obj.luas() );

//membuat objek dengan metode statis
var readline = require('readline-sync');
class Segitiga {
    constructor(a, t) {
        
        this.alas = a;
        this.tinggi = t;
        }
        luas() {
        return this.alas * this.tinggi / 2;
        }
        
        static buatObjek(a, t) {
        return new Segitiga(a, t);
        }
        }
       
        var a = parseFloat(readline.question(' Masukan alas: '));
        var t = parseFloat(readline.question(' Masukan tinggi: '));
        
        var obj = Segitiga.buatObjek(a, t);
        console.log(' \nSetelah nilai properti diubah ');
        console.log(` obj.alas\t: ${obj.alas} `);
        console.log(` obj.tinggi\t: ${obj.tinggi} `);
        console.log(' obj.luas\t: ' + obj.luas() );    

//eksepsi
var readline = require('readline-sync');

class DivisionByZeroError extends Error {
constructor(msg) {
super(msg); // memanggil konstruktor kelas error
this.name = this.constructor.name
this.message = msg;
}
getMessage() {
return this.message;
}
}
var a = parseFloat(readline.question(' Masukan nilai a: '));
var b = parseFloat(readline.question(' Masukan nilai b: '));
try {
if (b == 0) {
throw new DivisionByZeroError('KESALAHAN: Terjadi pembagian dengan nol');
}
var c = a / b;
console.log(` ${a} / ${b} = ${c} `);
} catch (e) {
console.log(e.getMessage());
}
